#------------------------------------------------------------------------------
# Setup cmake module
#------------------------------------------------------------------------------
set(MERCURY_UTIL_CMAKE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/CMake")
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${MERCURY_UTIL_CMAKE_DIR})

#------------------------------------------------------------------------------
# Include source and build directories
#------------------------------------------------------------------------------
include_directories(
  ${CMAKE_CURRENT_SOURCE_DIR}
  ${CMAKE_CURRENT_BINARY_DIR}
)

#------------------------------------------------------------------------------
# External dependencies
#------------------------------------------------------------------------------
include(CheckIncludeFiles)

# Threads
include(FindThreads)
set(MERCURY_UTIL_EXT_LIB_DEPENDENCIES
  ${MERCURY_UTIL_EXT_LIB_DEPENDENCIES}
  ${CMAKE_THREAD_LIBS_INIT}
)

# Rt
if(NOT WIN32 AND NOT APPLE)
  set(MERCURY_UTIL_EXT_LIB_DEPENDENCIES
    ${MERCURY_UTIL_EXT_LIB_DEPENDENCIES}
    -lrt
  )
endif()

# Atomics
if(NOT WIN32 AND NOT APPLE)
  check_include_files("stdatomic.h" HG_UTIL_HAS_STDATOMIC_H)
  if(NOT HG_UTIL_HAS_STDATOMIC_H)
    # Use OpenPA if stdatomic is not available
    find_package(OPA REQUIRED)
    if(OPA_FOUND)
      message(STATUS "OPA include directory: ${OPA_INCLUDE_DIRS}")
      include_directories(${OPA_INCLUDE_DIRS})
      set(MERCURY_UTIL_EXT_INCLUDE_DEPENDENCIES
        ${MERCURY_UTIL_EXT_INCLUDE_DEPENDENCIES}
        ${OPA_INCLUDE_DIRS}
      )
    else()
      message(FATAL_ERROR "Could not find OPA.")
    endif()
  endif()
endif()

# sys/queue.h
check_include_files("sys/queue.h" HG_UTIL_HAS_SYS_QUEUE_H)

#------------------------------------------------------------------------------
# Configure module header files
#------------------------------------------------------------------------------
# Set unique var used in the autogenerated config file (symbol import/export)
if(BUILD_SHARED_LIBS)
  set(HG_UTIL_BUILD_SHARED_LIBS 1)
  set(MERCURY_UTIL_LIBTYPE SHARED)
else()
  set(HG_UTIL_BUILD_SHARED_LIBS 0)
  set(MERCURY_UTIL_LIBTYPE STATIC)
endif()

if(MERCURY_ENABLE_VERBOSE_ERROR)
  set(HG_UTIL_HAS_VERBOSE_ERROR 1)
else()
  set(HG_UTIL_HAS_VERBOSE_ERROR 0)
endif()

configure_file(
  ${CMAKE_CURRENT_SOURCE_DIR}/mercury_util_config.h.in
  ${CMAKE_CURRENT_BINARY_DIR}/mercury_util_config.h
)

#------------------------------------------------------------------------------
# Set sources
#------------------------------------------------------------------------------
set(MERCURY_UTIL_SRCS
  ${CMAKE_CURRENT_SOURCE_DIR}/mercury_hash_table.c
  ${CMAKE_CURRENT_SOURCE_DIR}/mercury_hash_string.c
  ${CMAKE_CURRENT_SOURCE_DIR}/mercury_list.c
  ${CMAKE_CURRENT_SOURCE_DIR}/mercury_queue.c
  ${CMAKE_CURRENT_SOURCE_DIR}/mercury_thread.c
  ${CMAKE_CURRENT_SOURCE_DIR}/mercury_thread_mutex.c
  ${CMAKE_CURRENT_SOURCE_DIR}/mercury_thread_condition.c
  ${CMAKE_CURRENT_SOURCE_DIR}/mercury_thread_pool.c
  ${CMAKE_CURRENT_SOURCE_DIR}/mercury_time.c
  ${CMAKE_CURRENT_SOURCE_DIR}/mercury_request.c
)

#----------------------------------------------------------------------------
# Libraries
#----------------------------------------------------------------------------
# UTIL
add_library(mercury_util ${MERCURY_UTIL_SRCS})
target_link_libraries(mercury_util ${MERCURY_UTIL_EXT_LIB_DEPENDENCIES})
mercury_set_lib_options(mercury_util "mercury_util" ${MERCURY_UTIL_LIBTYPE})
if(MERCURY_ENABLE_COVERAGE)
  set_coverage_flags(mercury_util)
endif()

#---------------------------------------------------------------------------
# Add Target(s) to CMake Install
#---------------------------------------------------------------------------
install(
  TARGETS
    mercury_util
  EXPORT
    ${MERCURY_EXPORTED_TARGETS}
  LIBRARY DESTINATION ${MERCURY_INSTALL_LIB_DIR}
  ARCHIVE DESTINATION ${MERCURY_INSTALL_LIB_DIR}
  RUNTIME DESTINATION ${MERCURY_INSTALL_BIN_DIR}
)

#-----------------------------------------------------------------------------
# Specify project header files to be installed
#-----------------------------------------------------------------------------
set(MERCURY_HEADERS
  ${CMAKE_CURRENT_SOURCE_DIR}/mercury_hash_table.h
  ${CMAKE_CURRENT_SOURCE_DIR}/mercury_hash_string.h
  ${CMAKE_CURRENT_SOURCE_DIR}/mercury_list.h
  ${CMAKE_CURRENT_SOURCE_DIR}/mercury_queue.h
  ${CMAKE_CURRENT_SOURCE_DIR}/mercury_thread.h
  ${CMAKE_CURRENT_SOURCE_DIR}/mercury_thread_mutex.h
  ${CMAKE_CURRENT_SOURCE_DIR}/mercury_thread_condition.h
  ${CMAKE_CURRENT_SOURCE_DIR}/mercury_thread_pool.h
  ${CMAKE_CURRENT_SOURCE_DIR}/mercury_time.h
  ${CMAKE_CURRENT_SOURCE_DIR}/mercury_request.h
  ${CMAKE_CURRENT_SOURCE_DIR}/mercury_atomic.h
  ${CMAKE_CURRENT_BINARY_DIR}/mercury_util_config.h
)

#-----------------------------------------------------------------------------
# Add file(s) to CMake Install
#-----------------------------------------------------------------------------
install(
  FILES
    ${MERCURY_HEADERS}
  DESTINATION
    ${MERCURY_INSTALL_INCLUDE_DIR}/mercury_util
  COMPONENT
    headers
)

#------------------------------------------------------------------------------
# Set variables for parent scope
#------------------------------------------------------------------------------
set(MERCURY_UTIL_EXT_INCLUDE_DEPENDENCIES ${MERCURY_UTIL_EXT_INCLUDE_DEPENDENCIES} PARENT_SCOPE)
set(MERCURY_UTIL_EXT_LIB_DEPENDENCIES ${MERCURY_UTIL_EXT_LIB_DEPENDENCIES} PARENT_SCOPE)
